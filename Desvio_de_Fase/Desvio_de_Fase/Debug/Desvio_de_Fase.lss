
Desvio_de_Fase.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000150  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  000001c4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000001c4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001f4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  00000234  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000006ca  00000000  00000000  00000264  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000621  00000000  00000000  0000092e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000286  00000000  00000000  00000f4f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000074  00000000  00000000  000011d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000368  00000000  00000000  0000124c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000009f  00000000  00000000  000015b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00001653  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 8d 00 	jmp	0x11a	; 0x11a <__vector_1>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__vector_14>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a2 30       	cpi	r26, 0x02	; 2
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 48 00 	call	0x90	; 0x90 <main>
  88:	0c 94 a6 00 	jmp	0x14c	; 0x14c <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <main>:

unsigned int NS,SN=0;
int main(void)
{
	
		cli();
  90:	f8 94       	cli
		////////////////////////////////////////////////////////////////////////
		CLKPR = (1 << CLKPCE);
  92:	e1 e6       	ldi	r30, 0x61	; 97
  94:	f0 e0       	ldi	r31, 0x00	; 0
  96:	80 e8       	ldi	r24, 0x80	; 128
  98:	80 83       	st	Z, r24
		CLKPR = 0;
  9a:	10 82       	st	Z, r1
		
		// 40kHz gerador //
		
		DDRD |= 0b11000001;  //configura pino PD0,PD6,PD7 como saída e demais como entradas
  9c:	8a b1       	in	r24, 0x0a	; 10
  9e:	81 6c       	ori	r24, 0xC1	; 193
  a0:	8a b9       	out	0x0a, r24	; 10

		TCCR0A |= 0;
  a2:	84 b5       	in	r24, 0x24	; 36
  a4:	84 bd       	out	0x24, r24	; 36
		TCCR0B |= 0;
  a6:	85 b5       	in	r24, 0x25	; 37
  a8:	85 bd       	out	0x25, r24	; 37
		
		TCCR0A |= (0<<WGM00)|(1<<WGM01) |(0<<COM0A0)|(0<<COM0A1)|(0<<COM0B0)|(0<<COM0B1)  ; // CCT mode
  aa:	84 b5       	in	r24, 0x24	; 36
  ac:	82 60       	ori	r24, 0x02	; 2
  ae:	84 bd       	out	0x24, r24	; 36
		
		TCCR0B |= (0<<FOC0A)|(0<<FOC0B) |(0<<WGM02)| (0<<CS02)|(0<<CS01)|(1<<CS00)  ; //No prescaling
  b0:	85 b5       	in	r24, 0x25	; 37
  b2:	81 60       	ori	r24, 0x01	; 1
  b4:	85 bd       	out	0x25, r24	; 37
		
		TCNT0 = 0;
  b6:	16 bc       	out	0x26, r1	; 38
		OCR0A |= 99;
  b8:	87 b5       	in	r24, 0x27	; 39
  ba:	83 66       	ori	r24, 0x63	; 99
  bc:	87 bd       	out	0x27, r24	; 39
		
		TIMSK0 = (1 << OCIE0A);
  be:	82 e0       	ldi	r24, 0x02	; 2
  c0:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>

		///////////////////////////////////////////////////////////////////////
		
		// external interrupt //
		//                INT1                  INT0
		EICRA |= (0<<ISC11)|(0<<ISC10)|(1<<ISC01)|(0<<ISC00); //The rising edge generates an interrupt request.
  c4:	e9 e6       	ldi	r30, 0x69	; 105
  c6:	f0 e0       	ldi	r31, 0x00	; 0
  c8:	80 81       	ld	r24, Z
  ca:	82 60       	ori	r24, 0x02	; 2
  cc:	80 83       	st	Z, r24
		EIMSK |= (0<<INT1)|(1<<INT0); // on int1, on int0
  ce:	e8 9a       	sbi	0x1d, 0	; 29
		//TCCR2B |= (0<<FOC2A)|(0<<FOC2B) |(0<<WGM22)| (0<<CS22)|(0<<CS21)|(1<<CS20)  ;// No prescaling
		
		//TCNT2 = 0;
		//////////////////////////////////////////////////////////////////////////
		//   PWM
				DDRB |= 0b00001000; // PB3 saída 
  d0:	23 9a       	sbi	0x04, 3	; 4
				TCCR2A |= 0;
  d2:	a0 eb       	ldi	r26, 0xB0	; 176
  d4:	b0 e0       	ldi	r27, 0x00	; 0
  d6:	8c 91       	ld	r24, X
  d8:	8c 93       	st	X, r24
				TCCR2B |= 0;
  da:	e1 eb       	ldi	r30, 0xB1	; 177
  dc:	f0 e0       	ldi	r31, 0x00	; 0
  de:	80 81       	ld	r24, Z
  e0:	80 83       	st	Z, r24
				
				TCCR2A |= (1<<WGM20)|(1<<WGM21) |(1<<COM2A0)|(1<<COM2A1)|(0<<COM2B0)|(0<<COM2B1)  ; // Fast PWM
  e2:	8c 91       	ld	r24, X
  e4:	83 6c       	ori	r24, 0xC3	; 195
  e6:	8c 93       	st	X, r24
				
				TCCR2B |= (0<<FOC2A)|(0<<FOC2B) |(0<<WGM22)| (1<<CS22)|(0<<CS21)|(0<<CS20)  ;// clk/64 (From prescaler)
  e8:	80 81       	ld	r24, Z
  ea:	84 60       	ori	r24, 0x04	; 4
  ec:	80 83       	st	Z, r24
				
				TCNT2 = 0;
  ee:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
		//OCR1A |= 0;
		//
		//TIMSK1 = (1 << OCIE1A);
		
		//////////////////////////////////////////////////////////////////////////
		sei();
  f2:	78 94       	sei
  f4:	ff cf       	rjmp	.-2      	; 0xf4 <main+0x64>

000000f6 <__vector_14>:
		
    }
}

	ISR(TIMER0_COMPA_vect)
	{
  f6:	1f 92       	push	r1
  f8:	0f 92       	push	r0
  fa:	0f b6       	in	r0, 0x3f	; 63
  fc:	0f 92       	push	r0
  fe:	11 24       	eor	r1, r1
 100:	8f 93       	push	r24
 102:	9f 93       	push	r25
		PORTD ^= (1 << PORTD6);
 104:	9b b1       	in	r25, 0x0b	; 11
 106:	80 e4       	ldi	r24, 0x40	; 64
 108:	89 27       	eor	r24, r25
 10a:	8b b9       	out	0x0b, r24	; 11
		//if (PORTD6==1)
		//{
		//	TCNT2=0;
		//}
		
	}
 10c:	9f 91       	pop	r25
 10e:	8f 91       	pop	r24
 110:	0f 90       	pop	r0
 112:	0f be       	out	0x3f, r0	; 63
 114:	0f 90       	pop	r0
 116:	1f 90       	pop	r1
 118:	18 95       	reti

0000011a <__vector_1>:
	
	
	ISR(INT0_vect )
	{
 11a:	1f 92       	push	r1
 11c:	0f 92       	push	r0
 11e:	0f b6       	in	r0, 0x3f	; 63
 120:	0f 92       	push	r0
 122:	11 24       	eor	r1, r1
 124:	2f 93       	push	r18
 126:	3f 93       	push	r19
 128:	8f 93       	push	r24
		NS=TCNT0;
 12a:	86 b5       	in	r24, 0x26	; 38
 12c:	28 2f       	mov	r18, r24
 12e:	30 e0       	ldi	r19, 0x00	; 0
 130:	30 93 01 01 	sts	0x0101, r19	; 0x800101 <_edata+0x1>
 134:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <_edata>
		// SN=(SN+NS)/2;
		OCR2A=NS;
 138:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
		
 13c:	8f 91       	pop	r24
 13e:	3f 91       	pop	r19
 140:	2f 91       	pop	r18
 142:	0f 90       	pop	r0
 144:	0f be       	out	0x3f, r0	; 63
 146:	0f 90       	pop	r0
 148:	1f 90       	pop	r1
 14a:	18 95       	reti

0000014c <_exit>:
 14c:	f8 94       	cli

0000014e <__stop_program>:
 14e:	ff cf       	rjmp	.-2      	; 0x14e <__stop_program>
